spring:

  redis:
    database: 0  # 在 redis cluster 模式下， DB 数只有一个 0，
    lettuce:
      pool:
        max-active: 8  # 连接池最大连接数（使用负值表示没有限制）
        max-idle: 8    # 连接池中的最大空闲连接
        max-wait: 1000ms   # 连接池最大阻塞等待时间（使用负值表示没有限制）
        min-idle: 0    # 连接池中的最小空闲连接
      shutdown-timeout: 100ms
      socket-options: # scoket 设置
        keep-alive: false # 默认值 false
        tcp-no-delay: false # 默认值 false
    cluster:
      nodes:
        #        - 172.17.0.1:7000
        - 127.0.0.1:7000
      max-redirects: 5
      cluster-topology:  # 刷新拓扑的设置
        refresh-period: 0S  # 刷新拓扑的时间间隔， 0 表示不刷新，大于0开始刷新。从经验来看，client list 命令是一个耗时操作，根据情况决定是否开启或时长
        enable-all-adaptive-refresh-triggers: false  # cluster move 命令是由 client进行托管的，这也是刷新拓扑的原因。在使用move，ack 操作后是否刷新拓扑
        adaptive-refresh-triggers-timeout: 100S  # 在move等命令后，延时刷新，防止大量的刷新
      validate-cluster-node-membership: true

  redis-ext: # 扩展的实例
    first:  # 扩展的第一实例名，在使用的时候使用 @Autowired    @Qualifier("first") RedisClient redisClient_frist;
      database: 1      #同 spring.redis.**** （略）
      host: 127.0.0.1
      port: 6379
      lettuce:
        pool:
          max-active: 8  # 连接池最大连接数（使用负值表示没有限制）
          max-idle: 8    # 连接池中的最大空闲连接
          max-wait: 1000ms   # 连接池最大阻塞等待时间（使用负值表示没有限制）
          min-idle: 0    # 连接池中的最小空闲连接
        shutdown-timeout: 100ms

    second:  # 扩展的第二实例名，在使用的时候使用 @Autowired    @Qualifier("second") RedisClient redisClient_frist;
      database: 2
      host: 127.0.0.1
      port: 6379
      lettuce:
        pool:
          max-active: 8  # 连接池最大连接数（使用负值表示没有限制）
          max-idle: 8    # 连接池中的最大空闲连接
          max-wait: 1000ms   # 连接池最大阻塞等待时间（使用负值表示没有限制）
          min-idle: 0    # 连接池中的最小空闲连接


server:
  port: 11122

#logging:
#  level:
#    root: trace
